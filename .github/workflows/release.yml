name: Release & Publish

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build CSS
        run: npm run compile-all
      
      - name: Check for build artifacts
        run: |
          if [ ! -f "src/styles/pand4/pand4.css" ]; then
            echo "‚ùå CSS build failed"
            exit 1
          fi
          echo "‚úÖ Build completed successfully"

  release:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write # For provenance
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build for release
        run: npm run compile-all
      
      - name: Get current version
        id: get_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
      
      - name: Get latest NPM version
        id: get_npm_version
        run: |
          NPM_VERSION=$(npm view pand4 version 2>/dev/null || echo "0.0.0")
          echo "NPM_VERSION=$NPM_VERSION" >> $GITHUB_OUTPUT
          echo "NPM version: $NPM_VERSION"
      
      - name: Check if should publish
        id: should_publish
        run: |
          CURRENT="${{ steps.get_version.outputs.CURRENT_VERSION }}"
          NPM="${{ steps.get_npm_version.outputs.NPM_VERSION }}"
          
          if [ "$CURRENT" != "$NPM" ]; then
            if [ "$(printf '%s\n' "$NPM" "$CURRENT" | sort -V | head -n1)" = "$NPM" ]; then
              echo "should_publish=true" >> $GITHUB_OUTPUT
              echo "‚úÖ Will publish version $CURRENT (current NPM: $NPM)"
            else
              echo "should_publish=false" >> $GITHUB_OUTPUT
              echo "‚ùå Current version ($CURRENT) is not greater than NPM version ($NPM)"
            fi
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è Version $CURRENT already published to NPM"
          fi
      
      - name: Create GitHub Release
        if: steps.should_publish.outputs.should_publish == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.CURRENT_VERSION }}
          release_name: Release v${{ steps.get_version.outputs.CURRENT_VERSION }}
          body: |
            ## üöÄ Pand4 v${{ steps.get_version.outputs.CURRENT_VERSION }}
            
            ### Installation
            ```bash
            npm install pand4@${{ steps.get_version.outputs.CURRENT_VERSION }}
            ```
            
            ### Changes
            See [CHANGELOG.md](./CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false
      
      - name: Publish to NPM
        if: steps.should_publish.outputs.should_publish == 'true'
        run: npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Success notification
        if: steps.should_publish.outputs.should_publish == 'true'
        run: |
          echo "üéâ Successfully published pand4@${{ steps.get_version.outputs.CURRENT_VERSION }} to NPM!"
          echo "üì¶ Package: https://www.npmjs.com/package/pand4"
          echo "üöÄ Install: npm install pand4@${{ steps.get_version.outputs.CURRENT_VERSION }}"